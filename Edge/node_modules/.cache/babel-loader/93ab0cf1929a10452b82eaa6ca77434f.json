{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _punycode = require('punycode');\n\nvar _punycode2 = _interopRequireDefault(_punycode);\n\nvar _validAsciiDomain = require('../regexp/validAsciiDomain');\n\nvar _validAsciiDomain2 = _interopRequireDefault(_validAsciiDomain);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\n\n\nvar MAX_DOMAIN_LABEL_LENGTH = 63;\nvar PUNYCODE_ENCODED_DOMAIN_PREFIX = 'xn--'; // This is an extremely lightweight implementation of domain name validation according to RFC 3490\n// Our regexes handle most of the cases well enough\n// See https://tools.ietf.org/html/rfc3490#section-4.1 for details\n\nvar idna = {\n  toAscii: function toAscii(domain) {\n    if (domain.substring(0, 4) === PUNYCODE_ENCODED_DOMAIN_PREFIX && !domain.match(_validAsciiDomain2.default)) {\n      // Punycode encoded url cannot contain non ASCII characters\n      return;\n    }\n\n    var labels = domain.split('.');\n\n    for (var i = 0; i < labels.length; i++) {\n      var label = labels[i];\n\n      var punycodeEncodedLabel = _punycode2.default.toASCII(label);\n\n      if (punycodeEncodedLabel.length < 1 || punycodeEncodedLabel.length > MAX_DOMAIN_LABEL_LENGTH) {\n        // DNS label has invalid length\n        return;\n      }\n    }\n\n    return labels.join('.');\n  }\n};\nexports.default = idna;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}