{"ast":null,"code":"var errors = module.exports;\nvar canCapture = typeof Error.captureStackTrace === 'function';\nvar canStack = !!new Error().stack;\n\nfunction ErrorAbstract(msg, constructor) {\n  this.message = msg;\n  Error.call(this, this.message);\n\n  if (canCapture) {\n    Error.captureStackTrace(this, constructor);\n  } else if (canStack) {\n    this.stack = new Error().stack;\n  } else {\n    this.stack = '';\n  }\n}\n\nerrors._Abstract = ErrorAbstract;\nErrorAbstract.prototype = new Error();\n\nerrors.MissingUserId = function MissingUserId(msg) {\n  ErrorAbstract.call(this, msg);\n};\n\nerrors.MissingUserId.prototype = new ErrorAbstract();\n\nerrors.MisconfiguredClient = function MisconfiguredClient(msg) {\n  ErrorAbstract.call(this, msg);\n};\n\nerrors.MisconfiguredClient.prototype = new ErrorAbstract();\n\nerrors.InvalidInputData = function InvalidInputData(msg, errorInfo) {\n  ErrorAbstract.call(this, msg + ': \\n\\t' + errorInfo.join('\\n\\t'));\n};\n\nerrors.InvalidInputData.prototype = new ErrorAbstract();\n\nerrors.APIError = function APIError(msg) {\n  ErrorAbstract.call(this, msg);\n};\n\nerrors.APIError.prototype = new ErrorAbstract();","map":null,"metadata":{},"sourceType":"script"}