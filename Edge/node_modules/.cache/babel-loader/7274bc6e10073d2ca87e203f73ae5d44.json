{"ast":null,"code":"import _slicedToArray from \"/Users/lc4311/Desktop/Hackathon2019/Strandmon/cxa/Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lc4311/Desktop/Hackathon2019/Strandmon/cxa/Edge/src/ShowInvest.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport './ShowInvest.css';\nexport let ShowInvest = props => {\n  let handleChange = (hawker, index) => {\n    let _hawker = hawker; // console.log(inputArray,index)\n    // console.log(_hawker,inputArray[index])\n\n    props.offer(_hawker, parseInt(inputArray[index]));\n  };\n\n  let conversionRates = {\n    \"SGD\": 1,\n    \"MYR\": 3.03,\n    \"ETH\": 0.0027,\n    \"BTC\": 0.000063\n  };\n\n  let _useState = useState(new Array(props.hawkers.length).fill(0)),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputArray = _useState2[0],\n      setInputArray = _useState2[1];\n\n  let _useState3 = useState(new Array(props.hawkers.length).fill(\"SGD\")),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userCurrencies = _useState4[0],\n      setuserCurrencies = _useState4[1]; // let inputChangeHandler = (i) => {\n  //     setInputVal(event.target.value)\n  // }\n\n\n  let inputChangeHandler = ind => {\n    // console.log(inputArray)\n    return event => setInputArray(inputArray.map((e, j) => {\n      let value = j === ind ? event.target.value : e;\n      return value;\n    }));\n  };\n\n  let currencies = [\"SGD\", \"MYR\", \"ETH\", \"BTC\"];\n\n  let selectHandler = ind => {\n    return (eventKey, eventObj) => setuserCurrencies(userCurrencies.map((e, j) => {\n      // console.log(eventObj.target.innerText)\n      let value = j === ind ? eventObj.target.innerText : e;\n      return value;\n    }));\n  };\n\n  let hawkerList = props.hawkers.map((hawker, i) => React.createElement(\"tr\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, hawker.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: inputChangeHandler(i),\n    value: inputArray[i],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, hawker.amount * conversionRates[userCurrencies[i]], \" \", userCurrencies[i]), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" \", React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" \", React.createElement(Dropdown.Toggle, {\n    variant: \"info\",\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, userCurrencies[i]), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, currencies.map(item => React.createElement(Dropdown.Item, {\n    onSelect: selectHandler(i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, item))))), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \" \", React.createElement(\"button\", {\n    onClick: handleChange.bind(this, hawker.name, i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \" Offer \"))));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" Hawkers\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Hawkers\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Amount to Invest (in SGD)\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Amount Invested \"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \" Currency\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \" Currency\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \" Currency\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \" Currency\")), hawkerList)));\n};\nexport default ShowInvest;","map":{"version":3,"sources":["/Users/lc4311/Desktop/Hackathon2019/Strandmon/cxa/Edge/src/ShowInvest.js"],"names":["React","useState","useEffect","Dropdown","ShowInvest","props","handleChange","hawker","index","_hawker","offer","parseInt","inputArray","conversionRates","Array","hawkers","length","fill","setInputArray","userCurrencies","setuserCurrencies","inputChangeHandler","ind","event","map","e","j","value","target","currencies","selectHandler","eventKey","eventObj","innerText","hawkerList","i","name","amount","item","bind"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Dropdown} from 'react-bootstrap';\nimport './ShowInvest.css'\n\nexport let ShowInvest = (props) => {\n\n    let handleChange=(hawker,index)=>{\n        \n        let _hawker=hawker;\n        \n        // console.log(inputArray,index)\n        // console.log(_hawker,inputArray[index])\n        props.offer(_hawker,parseInt(inputArray[index]))\n    }\n\n    let conversionRates = {\n        \"SGD\":1,\n        \"MYR\":3.03,\n        \"ETH\":0.0027,\n        \"BTC\":0.000063,\n    }\n\n    let [inputArray, setInputArray] = useState(new Array(props.hawkers.length).fill(0))\n    let [userCurrencies , setuserCurrencies] = useState(new Array(props.hawkers.length).fill(\"SGD\"))\n    // let inputChangeHandler = (i) => {\n    //     setInputVal(event.target.value)\n    // }\n    \n    let inputChangeHandler = (ind) => {\n        // console.log(inputArray)\n        return (event) => setInputArray(inputArray.map( (e,j) => { \n           \n            let value = j === ind ? event.target.value : e \n            return value\n            }))\n    \n        }\n    \n    let currencies = [\"SGD\",\"MYR\",\"ETH\",\"BTC\"]\n\n\n    let selectHandler = (ind) => {\n        return (eventKey,eventObj) => setuserCurrencies(userCurrencies.map( (e,j) => { \n            // console.log(eventObj.target.innerText)\n            let value = j === ind ? eventObj.target.innerText : e \n            return value\n            \n            }))\n    }\n\n    let hawkerList=props.hawkers.map((hawker,i)=>\n        <tr key={i}>\n            <td >{hawker.name}</td>\n            <td><input onChange={inputChangeHandler(i)} value={inputArray[i]}></input></td>\n            <td>{hawker.amount*conversionRates[userCurrencies[i]]} {userCurrencies[i]}</td>\n            <td> <Dropdown> <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">{userCurrencies[i]}</Dropdown.Toggle><Dropdown.Menu>{currencies.map( item => <Dropdown.Item onSelect={selectHandler(i)}>{item}</Dropdown.Item>)}</Dropdown.Menu></Dropdown></td>\n            <td> <button  onClick={handleChange.bind(this,hawker.name,i)}> Offer </button></td>\n        </tr>)\n\n        return(\n            <div>\n            <h3> Hawkers</h3>\n            <hr />\n            <table >\n                <tbody>\n                    <tr>\n                        <th>Hawkers</th>\n                        <th>Amount to Invest (in SGD)</th>\n                        <th>Amount Invested </th> \n                        <th> Currency</th>\n                        <th> Currency</th>\n                        <th> Currency</th>\n                        <th> Currency</th>\n                    </tr>\n                    {hawkerList}\n                </tbody>\n            </table>\n          </div>\n        )\n    } \n\n\nexport default ShowInvest;"]},"metadata":{},"sourceType":"module"}