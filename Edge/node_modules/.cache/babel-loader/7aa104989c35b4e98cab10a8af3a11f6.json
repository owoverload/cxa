{"ast":null,"code":"'use strict';\n\nvar Class = require('../util/class'),\n    extend = require('../util/extend'),\n    Deferrable = require('../mixins/deferrable');\n\nvar Subscription = Class({\n  initialize: function (client, channels, callback, context) {\n    this._client = client;\n    this._channels = channels;\n    this._callback = callback;\n    this._context = context;\n    this._cancelled = false;\n  },\n  withChannel: function (callback, context) {\n    this._withChannel = [callback, context];\n    return this;\n  },\n  apply: function (context, args) {\n    var message = args[0];\n    if (this._callback) this._callback.call(this._context, message.data);\n    if (this._withChannel) this._withChannel[0].call(this._withChannel[1], message.channel, message.data);\n  },\n  cancel: function () {\n    if (this._cancelled) return;\n\n    this._client.unsubscribe(this._channels, this);\n\n    this._cancelled = true;\n  },\n  unsubscribe: function () {\n    this.cancel();\n  }\n});\nextend(Subscription.prototype, Deferrable);\nmodule.exports = Subscription;","map":null,"metadata":{},"sourceType":"script"}