{"ast":null,"code":"/**\n * @module stream\n * @author Thierry Schellenbach\n * BSD License\n */\nvar StreamClient = require('./lib/client');\n\nvar errors = require('./lib/errors');\n\nvar signing = require('./lib/signing');\n\nvar request = require('request');\n\nfunction connect(apiKey, apiSecret, appId, options) {\n  /**\n   * Create StreamClient\n   * @method connect\n   * @param  {string} apiKey    API key\n   * @param  {string} [apiSecret] API secret (only use this on the server)\n   * @param  {string} [appId]     Application identifier\n   * @param  {object} [options]   Additional options\n   * @param  {string} [options.location] Datacenter location\n   * @return {StreamClient}     StreamClient\n   * @example <caption>Basic usage</caption>\n   * stream.connect(apiKey, apiSecret);\n   * @example <caption>or if you want to be able to subscribe and listen</caption>\n   * stream.connect(apiKey, apiSecret, appId);\n   * @example <caption>or on Heroku</caption>\n   * stream.connect(streamURL);\n   * @example <caption>where streamURL looks like</caption>\n   * \"https://thierry:pass@gestream.io/?app=1\"\n   */\n  if (typeof process !== 'undefined' && process.env.STREAM_URL && !apiKey) {\n    var parts = /https:\\/\\/(\\w+):(\\w+)@([\\w-]*).*\\?app_id=(\\d+)/.exec(process.env.STREAM_URL);\n    apiKey = parts[1];\n    apiSecret = parts[2];\n    var location = parts[3];\n    appId = parts[4];\n\n    if (options === undefined) {\n      options = {};\n    }\n\n    if (location !== 'getstream' && location !== 'stream-io-api') {\n      options.location = location;\n    }\n  }\n\n  return new StreamClient(apiKey, apiSecret, appId, options);\n}\n\nmodule.exports.connect = connect;\nmodule.exports.errors = errors;\nmodule.exports.request = request;\nmodule.exports.signing = signing;\nmodule.exports.Client = StreamClient;","map":null,"metadata":{},"sourceType":"script"}