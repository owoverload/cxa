{"ast":null,"code":"'use strict';\n\nvar extend = require('./extend');\n\nmodule.exports = function (parent, methods) {\n  if (typeof parent !== 'function') {\n    methods = parent;\n    parent = Object;\n  }\n\n  var klass = function () {\n    if (!this.initialize) return this;\n    return this.initialize.apply(this, arguments) || this;\n  };\n\n  var bridge = function () {};\n\n  bridge.prototype = parent.prototype;\n  klass.prototype = new bridge();\n  extend(klass.prototype, methods);\n  return klass;\n};","map":null,"metadata":{},"sourceType":"script"}