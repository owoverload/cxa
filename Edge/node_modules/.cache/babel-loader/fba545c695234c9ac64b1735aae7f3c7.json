{"ast":null,"code":"import _slicedToArray from \"/Users/ericaong/Desktop/cxa/Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ericaong/Desktop/cxa/Edge/src/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'react-chat-widget/lib/styles.css';\nimport './Chat.css';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport io from 'socket.io-client';\n\nlet Chat = props => {\n  console.log(props.socket);\n\n  let _useState = useState('Jerry'),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  let _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      toggleWidget = _useState4[0],\n      setToggleWidget = _useState4[1];\n\n  useEffect(() => {\n    props.socket.on('RECEIVE_MESSAGE', function (data) {\n      console.log(data);\n\n      if (data.user !== user) {\n        addResponseMessage(data.message);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    props.socket.on('TRIGGER', function (data) {\n      setToggleWidget(true);\n    });\n  }, [mySocket]);\n\n  let handleNewUserMessage = newMessage => {\n    props.socket.emit('SEND_MESSAGE', {\n      user: user,\n      message: newMessage\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Chat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    handleNewUserMessage: handleNewUserMessage,\n    title: \"\".concat(props.contactname),\n    subtitle: \"\".concat(props.contactrole),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/ericaong/Desktop/cxa/Edge/src/Chat.js"],"names":["React","useState","useEffect","Widget","addResponseMessage","io","Chat","props","console","log","socket","user","setUser","toggleWidget","setToggleWidget","on","data","message","mySocket","handleNewUserMessage","newMessage","emit","contactname","contactrole"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,kCAAP;AACA,OAAO,YAAP;AACA,SAASC,MAAT,EAAiBC,kBAAjB,QAA2C,mBAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,IAAIC,IAAI,GAAIC,KAAD,IAAW;AAGlBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;;AAHkB,kBAIMT,QAAQ,CAAC,OAAD,CAJd;AAAA;AAAA,MAIZU,IAJY;AAAA,MAINC,OAJM;;AAAA,mBAKoBX,QAAQ,CAAC,KAAD,CAL5B;AAAA;AAAA,MAKbY,YALa;AAAA,MAKCC,eALD;;AAMlBZ,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAACG,MAAN,CAAaK,EAAb,CAAgB,iBAAhB,EAAmC,UAASC,IAAT,EAAe;AAC9CR,MAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;;AACA,UAAGA,IAAI,CAACL,IAAL,KAAcA,IAAjB,EAAuB;AACnBP,QAAAA,kBAAkB,CAACY,IAAI,CAACC,OAAN,CAAlB;AACH;AACJ,KALD;AAOH,GARQ,EAQN,EARM,CAAT;AAWAf,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,KAAK,CAACG,MAAN,CAAaK,EAAb,CAAgB,SAAhB,EAA2B,UAASC,IAAT,EAAe;AAExCF,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KAHD;AAKD,GANM,EAMJ,CAACI,QAAD,CANI,CAAT;;AASA,MAAIC,oBAAoB,GAAIC,UAAD,IAAgB;AACvCb,IAAAA,KAAK,CAACG,MAAN,CAAaW,IAAb,CAAkB,cAAlB,EAAkC;AAC9BV,MAAAA,IAAI,EAAEA,IADwB;AAE9BM,MAAAA,OAAO,EAAEG;AAFqB,KAAlC;AAIH,GALD;;AAOA,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,oBAAoB,EAAED,oBAA9B;AAAoD,IAAA,KAAK,YAAKZ,KAAK,CAACe,WAAX,CAAzD;AAAmF,IAAA,QAAQ,YAAKf,KAAK,CAACgB,WAAX,CAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAtCD;;AAwCA,eAAejB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'react-chat-widget/lib/styles.css';\nimport './Chat.css';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport io from 'socket.io-client';\n\nlet Chat = (props) => {\n\n  \n    console.log(props.socket)\n    let [ user, setUser ] = useState('Jerry')\n    let [toggleWidget, setToggleWidget] = useState(false)\n    useEffect(() => {\n        props.socket.on('RECEIVE_MESSAGE', function(data) {\n            console.log(data)\n            if(data.user !== user) {\n                addResponseMessage(data.message);\n            }\n        });\n\n    }, []\n    )\n\n    useEffect(()=>{\n        props.socket.on('TRIGGER', function(data) {\n          \n          setToggleWidget(true)\n        });\n    \n      }, [mySocket])\n      \n\n    let handleNewUserMessage = (newMessage) => {\n        props.socket.emit('SEND_MESSAGE', {\n            user: user,\n            message: newMessage\n        });\n    }\n\n    return (\n        <div className=\"Chat\">\n            <Widget handleNewUserMessage={handleNewUserMessage} title={`${props.contactname}`} subtitle={`${props.contactrole}`}></Widget>\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}