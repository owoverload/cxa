{"ast":null,"code":"var each = require('./utils/each');\n\nmodule.exports = function (StreamAnalytics) {\n  var loaded = window.StreamAnalytics || null,\n      cached = window._StreamAnalytics || null,\n      clients;\n\n  if (loaded && cached) {\n    clients = cached.clients || {};\n    each(clients, function (client\n    /*, id */\n    ) {\n      each(StreamAnalytics.prototype, function (method, key) {\n        loaded.prototype[key] = method;\n      }); // Run config\n\n      if (client._config) {\n        client.configure.call(client, client._config);\n      } // Run setUser\n\n\n      if (client._setUser) {\n        each(client._setUser, function (args) {\n          client.setUser.apply(client, args);\n        });\n      } // Send Queued Events\n\n\n      if (client._trackImpression) {\n        each(client._trackImpression, function (obj) {\n          client.trackImpression.apply(client, obj);\n        });\n      } // Send Queued Events\n\n\n      if (client._trackEngagement) {\n        each(client._trackEngagement, function (obj) {\n          client.trackEngagement.apply(client, obj);\n        });\n      } // unset config\n\n\n      each(['_config', '_setUser', '_trackEngagement', '_trackImpression'], function (name) {\n        if (client[name]) {\n          client[name] = undefined;\n\n          try {\n            delete client[name];\n          } catch (e) {// do nothing\n          }\n        }\n      });\n    });\n  }\n\n  window._StreamAnalytics = undefined;\n\n  try {\n    delete window['_StreamAnalytics'];\n  } catch (e) {// do nothing\n  }\n};","map":null,"metadata":{},"sourceType":"script"}