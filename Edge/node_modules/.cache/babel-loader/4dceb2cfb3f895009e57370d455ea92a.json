{"ast":null,"code":"import _slicedToArray from \"/Users/lc4311/Desktop/Hackathon2019/Strandmon/cxa/Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lc4311/Desktop/Hackathon2019/Strandmon/cxa/Edge/src/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'react-chat-widget/lib/styles.css';\nimport './Chat.css';\nimport { Widget, addResponseMessage, toggleWidget } from 'react-chat-widget';\nimport io from 'socket.io-client';\n\nlet Chat = props => {\n  console.log(props.socket);\n\n  let _useState = useState('Jerry'),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1]; // let [toggleWidget, setToggleWidget] = useState(false)\n\n\n  useEffect(() => {\n    props.socket.on('RECEIVE_MESSAGE', function (data) {\n      console.log(data);\n\n      if (data.user !== user) {\n        addResponseMessage(data.message);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    props.socket.on('TRIGGER', function (data) {\n      //   setToggleWidget(true)\n      toggleWidget();\n    });\n  }, []);\n\n  let handleNewUserMessage = newMessage => {\n    props.socket.emit('SEND_MESSAGE', {\n      user: user,\n      message: newMessage\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Chat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    handleNewUserMessage: handleNewUserMessage,\n    title: \"\".concat(props.contactname),\n    subtitle: \"\".concat(props.contactrole),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/lc4311/Desktop/Hackathon2019/Strandmon/cxa/Edge/src/Chat.js"],"names":["React","useState","useEffect","Widget","addResponseMessage","toggleWidget","io","Chat","props","console","log","socket","user","setUser","on","data","message","handleNewUserMessage","newMessage","emit","contactname","contactrole"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,kCAAP;AACA,OAAO,YAAP;AACA,SAASC,MAAT,EAAiBC,kBAAjB,EAAqCC,YAArC,QAAyD,mBAAzD;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,IAAIC,IAAI,GAAIC,KAAD,IAAW;AAGlBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;;AAHkB,kBAIMV,QAAQ,CAAC,OAAD,CAJd;AAAA;AAAA,MAIZW,IAJY;AAAA,MAINC,OAJM,kBAKlB;;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACG,MAAN,CAAaG,EAAb,CAAgB,iBAAhB,EAAmC,UAASC,IAAT,EAAe;AAC9CN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;;AACA,UAAGA,IAAI,CAACH,IAAL,KAAcA,IAAjB,EAAuB;AACnBR,QAAAA,kBAAkB,CAACW,IAAI,CAACC,OAAN,CAAlB;AACH;AACJ,KALD;AAOH,GARQ,EAQN,EARM,CAAT;AAWAd,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,KAAK,CAACG,MAAN,CAAaG,EAAb,CAAgB,SAAhB,EAA2B,UAASC,IAAT,EAAe;AAE1C;AACEV,MAAAA,YAAY;AACb,KAJD;AAMD,GAPM,EAOJ,EAPI,CAAT;;AAUA,MAAIY,oBAAoB,GAAIC,UAAD,IAAgB;AACvCV,IAAAA,KAAK,CAACG,MAAN,CAAaQ,IAAb,CAAkB,cAAlB,EAAkC;AAC9BP,MAAAA,IAAI,EAAEA,IADwB;AAE9BI,MAAAA,OAAO,EAAEE;AAFqB,KAAlC;AAIH,GALD;;AAOA,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,oBAAoB,EAAED,oBAA9B;AAAoD,IAAA,KAAK,YAAKT,KAAK,CAACY,WAAX,CAAzD;AAAmF,IAAA,QAAQ,YAAKZ,KAAK,CAACa,WAAX,CAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAvCD;;AAyCA,eAAed,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'react-chat-widget/lib/styles.css';\nimport './Chat.css';\nimport { Widget, addResponseMessage, toggleWidget } from 'react-chat-widget';\nimport io from 'socket.io-client';\n\nlet Chat = (props) => {\n\n  \n    console.log(props.socket)\n    let [ user, setUser ] = useState('Jerry')\n    // let [toggleWidget, setToggleWidget] = useState(false)\n    useEffect(() => {\n        props.socket.on('RECEIVE_MESSAGE', function(data) {\n            console.log(data)\n            if(data.user !== user) {\n                addResponseMessage(data.message);\n            }\n        });\n\n    }, []\n    )\n\n    useEffect(()=>{\n        props.socket.on('TRIGGER', function(data) {\n          \n        //   setToggleWidget(true)\n          toggleWidget()\n        });\n    \n      }, [])\n      \n\n    let handleNewUserMessage = (newMessage) => {\n        props.socket.emit('SEND_MESSAGE', {\n            user: user,\n            message: newMessage\n        });\n    }\n\n    return (\n        <div className=\"Chat\">\n            <Widget handleNewUserMessage={handleNewUserMessage} title={`${props.contactname}`} subtitle={`${props.contactrole}`}></Widget>\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}