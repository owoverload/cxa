{"ast":null,"code":"var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar errors = require('./errors');\n\nvar validFeedSlugRe = /^[\\w]+$/;\nvar validUserIdRe = /^[\\w-]+$/;\n\nfunction validateFeedId(feedId) {\n  /*\n   * Validate that the feedId matches the spec user:1\n   */\n  var parts = feedId.split(':');\n\n  if (parts.length !== 2) {\n    throw new errors.FeedError('Invalid feedId, expected something like user:1 got ' + feedId);\n  }\n\n  var feedSlug = parts[0];\n  var userId = parts[1];\n  validateFeedSlug(feedSlug);\n  validateUserId(userId);\n  return feedId;\n}\n\nexports.validateFeedId = validateFeedId;\n\nfunction validateFeedSlug(feedSlug) {\n  /*\n   * Validate that the feedSlug matches \\w\n   */\n  var valid = validFeedSlugRe.test(feedSlug);\n\n  if (!valid) {\n    throw new errors.FeedError('Invalid feedSlug, please use letters, numbers or _: ' + feedSlug);\n  }\n\n  return feedSlug;\n}\n\nexports.validateFeedSlug = validateFeedSlug;\n\nfunction validateUserId(userId) {\n  /*\n   * Validate the userId matches \\w\n   */\n  var valid = validUserIdRe.test(userId);\n\n  if (!valid) {\n    throw new errors.FeedError('Invalid userId, please use letters, numbers, - or _: ' + userId);\n  }\n\n  return userId;\n}\n\nexports.validateUserId = validateUserId;\n\nfunction rfc3986(str) {\n  return str.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\nexports.rfc3986 = rfc3986;\n\nfunction isReadableStream(obj) {\n  return _typeof(obj) === 'object' && _typeof(obj._read === 'function') && _typeof(obj._readableState === 'object');\n}\n\nexports.isReadableStream = isReadableStream;","map":null,"metadata":{},"sourceType":"script"}