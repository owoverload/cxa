{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _endHashtagMatch = require('./regexp/endHashtagMatch');\n\nvar _endHashtagMatch2 = _interopRequireDefault(_endHashtagMatch);\n\nvar _extractUrlsWithIndices = require('./extractUrlsWithIndices');\n\nvar _extractUrlsWithIndices2 = _interopRequireDefault(_extractUrlsWithIndices);\n\nvar _hashSigns = require('./regexp/hashSigns');\n\nvar _hashSigns2 = _interopRequireDefault(_hashSigns);\n\nvar _removeOverlappingEntities = require('./removeOverlappingEntities');\n\nvar _removeOverlappingEntities2 = _interopRequireDefault(_removeOverlappingEntities);\n\nvar _validHashtag = require('./regexp/validHashtag');\n\nvar _validHashtag2 = _interopRequireDefault(_validHashtag);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar extractHashtagsWithIndices = function extractHashtagsWithIndices(text, options) {\n  if (!options) {\n    options = {\n      checkUrlOverlap: true\n    };\n  }\n\n  if (!text || !text.match(_hashSigns2.default)) {\n    return [];\n  }\n\n  var tags = [];\n  text.replace(_validHashtag2.default, function (match, before, hash, hashText, offset, chunk) {\n    var after = chunk.slice(offset + match.length);\n\n    if (after.match(_endHashtagMatch2.default)) {\n      return;\n    }\n\n    var startPosition = offset + before.length;\n    var endPosition = startPosition + hashText.length + 1;\n    tags.push({\n      hashtag: hashText,\n      indices: [startPosition, endPosition]\n    });\n  });\n\n  if (options.checkUrlOverlap) {\n    // also extract URL entities\n    var urls = (0, _extractUrlsWithIndices2.default)(text);\n\n    if (urls.length > 0) {\n      var entities = tags.concat(urls); // remove overlap\n\n      (0, _removeOverlappingEntities2.default)(entities); // only push back hashtags\n\n      tags = [];\n\n      for (var i = 0; i < entities.length; i++) {\n        if (entities[i].hashtag) {\n          tags.push(entities[i]);\n        }\n      }\n    }\n  }\n\n  return tags;\n}; // Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\n\n\nexports.default = extractHashtagsWithIndices;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}