{"ast":null,"code":"'use strict';\n\nvar Promise = require('../util/promise');\n\nmodule.exports = {\n  then: function (callback, errback) {\n    var self = this;\n    if (!this._promise) this._promise = new Promise(function (resolve, reject) {\n      self._resolve = resolve;\n      self._reject = reject;\n    });\n    if (arguments.length === 0) return this._promise;else return this._promise.then(callback, errback);\n  },\n  callback: function (callback, context) {\n    return this.then(function (value) {\n      callback.call(context, value);\n    });\n  },\n  errback: function (callback, context) {\n    return this.then(null, function (reason) {\n      callback.call(context, reason);\n    });\n  },\n  timeout: function (seconds, message) {\n    this.then();\n    var self = this;\n    this._timer = global.setTimeout(function () {\n      self._reject(message);\n    }, seconds * 1000);\n  },\n  setDeferredStatus: function (status, value) {\n    if (this._timer) global.clearTimeout(this._timer);\n    this.then();\n    if (status === 'succeeded') this._resolve(value);else if (status === 'failed') this._reject(value);else delete this._promise;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}