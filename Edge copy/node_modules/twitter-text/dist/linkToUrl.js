'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (entity, text, options) {
  var url = entity.url;
  var displayUrl = url;
  var linkText = (0, _htmlEscape2.default)(displayUrl);

  // If the caller passed a urlEntities object (provided by a Twitter API
  // response with include_entities=true), we use that to render the display_url
  // for each URL instead of it's underlying t.co URL.
  var urlEntity = options.urlEntities && options.urlEntities[url] || entity;
  if (urlEntity.display_url) {
    linkText = (0, _linkTextWithEntity2.default)(urlEntity, options);
  }

  var attrs = (0, _clone2.default)(options.htmlAttrs || {});

  if (!url.match(_urlHasProtocol2.default)) {
    url = 'http://' + url;
  }
  attrs.href = url;

  if (options.targetBlank) {
    attrs.target = '_blank';
  }

  // set class only if urlClass is specified.
  if (options.urlClass) {
    attrs['class'] = options.urlClass;
  }

  // set target only if urlTarget is specified.
  if (options.urlTarget) {
    attrs.target = options.urlTarget;
  }

  if (!options.title && urlEntity.display_url) {
    attrs.title = urlEntity.expanded_url;
  }

  return (0, _linkToText2.default)(entity, linkText, attrs, options);
};

var _clone = require('./lib/clone');

var _clone2 = _interopRequireDefault(_clone);

var _htmlEscape = require('./htmlEscape');

var _htmlEscape2 = _interopRequireDefault(_htmlEscape);

var _linkToText = require('./linkToText');

var _linkToText2 = _interopRequireDefault(_linkToText);

var _linkTextWithEntity = require('./linkTextWithEntity');

var _linkTextWithEntity2 = _interopRequireDefault(_linkTextWithEntity);

var _urlHasProtocol = require('./regexp/urlHasProtocol');

var _urlHasProtocol2 = _interopRequireDefault(_urlHasProtocol);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2018 Twitter, Inc.
// Licensed under the Apache License, Version 2.0
// http://www.apache.org/licenses/LICENSE-2.0

module.exports = exports['default'];