'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (text, entities, options) {
  var options = (0, _clone2.default)(options || {});
  options.hashtagClass = options.hashtagClass || DEFAULT_HASHTAG_CLASS;
  options.hashtagUrlBase = options.hashtagUrlBase || 'https://twitter.com/search?q=%23';
  options.cashtagClass = options.cashtagClass || DEFAULT_CASHTAG_CLASS;
  options.cashtagUrlBase = options.cashtagUrlBase || 'https://twitter.com/search?q=%24';
  options.listClass = options.listClass || DEFAULT_LIST_CLASS;
  options.usernameClass = options.usernameClass || DEFAULT_USERNAME_CLASS;
  options.usernameUrlBase = options.usernameUrlBase || 'https://twitter.com/';
  options.listUrlBase = options.listUrlBase || 'https://twitter.com/';
  options.htmlAttrs = (0, _extractHtmlAttrsFromOptions2.default)(options);
  options.invisibleTagAttrs = options.invisibleTagAttrs || "style='position:absolute;left:-9999px;'";

  // remap url entities to hash
  var urlEntities, i, len;
  if (options.urlEntities) {
    urlEntities = {};
    for (i = 0, len = options.urlEntities.length; i < len; i++) {
      urlEntities[options.urlEntities[i].url] = options.urlEntities[i];
    }
    options.urlEntities = urlEntities;
  }

  var result = '';
  var beginIndex = 0;

  // sort entities by start index
  entities.sort(function (a, b) {
    return a.indices[0] - b.indices[0];
  });

  var nonEntity = options.htmlEscapeNonEntities ? _htmlEscape2.default : function (text) {
    return text;
  };

  for (var i = 0; i < entities.length; i++) {
    var entity = entities[i];
    result += nonEntity(text.substring(beginIndex, entity.indices[0]));

    if (entity.url) {
      result += (0, _linkToUrl2.default)(entity, text, options);
    } else if (entity.hashtag) {
      result += (0, _linkToHashtag2.default)(entity, text, options);
    } else if (entity.screenName) {
      result += (0, _linkToMentionAndList2.default)(entity, text, options);
    } else if (entity.cashtag) {
      result += (0, _linkToCashtag2.default)(entity, text, options);
    }
    beginIndex = entity.indices[1];
  }
  result += nonEntity(text.substring(beginIndex, text.length));
  return result;
};

var _clone = require('./lib/clone');

var _clone2 = _interopRequireDefault(_clone);

var _extractHtmlAttrsFromOptions = require('./extractHtmlAttrsFromOptions');

var _extractHtmlAttrsFromOptions2 = _interopRequireDefault(_extractHtmlAttrsFromOptions);

var _htmlEscape = require('./htmlEscape');

var _htmlEscape2 = _interopRequireDefault(_htmlEscape);

var _linkToCashtag = require('./linkToCashtag');

var _linkToCashtag2 = _interopRequireDefault(_linkToCashtag);

var _linkToHashtag = require('./linkToHashtag');

var _linkToHashtag2 = _interopRequireDefault(_linkToHashtag);

var _linkToUrl = require('./linkToUrl');

var _linkToUrl2 = _interopRequireDefault(_linkToUrl);

var _linkToMentionAndList = require('./linkToMentionAndList');

var _linkToMentionAndList2 = _interopRequireDefault(_linkToMentionAndList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Default CSS class for auto-linked lists (along with the url class)
var DEFAULT_LIST_CLASS = 'tweet-url list-slug';
// Default CSS class for auto-linked usernames (along with the url class)
// Copyright 2018 Twitter, Inc.
// Licensed under the Apache License, Version 2.0
// http://www.apache.org/licenses/LICENSE-2.0

var DEFAULT_USERNAME_CLASS = 'tweet-url username';
// Default CSS class for auto-linked hashtags (along with the url class)
var DEFAULT_HASHTAG_CLASS = 'tweet-url hashtag';
// Default CSS class for auto-linked cashtags (along with the url class)
var DEFAULT_CASHTAG_CLASS = 'tweet-url cashtag';

module.exports = exports['default'];