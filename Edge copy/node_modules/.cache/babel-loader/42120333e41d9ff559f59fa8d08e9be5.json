{"ast":null,"code":"'use strict';\n\nvar extend = require('../util/extend'),\n    Logging = require('../mixins/logging');\n\nvar Extensible = {\n  addExtension: function (extension) {\n    this._extensions = this._extensions || [];\n\n    this._extensions.push(extension);\n\n    if (extension.added) extension.added(this);\n  },\n  removeExtension: function (extension) {\n    if (!this._extensions) return;\n    var i = this._extensions.length;\n\n    while (i--) {\n      if (this._extensions[i] !== extension) continue;\n\n      this._extensions.splice(i, 1);\n\n      if (extension.removed) extension.removed(this);\n    }\n  },\n  pipeThroughExtensions: function (stage, message, request, callback, context) {\n    this.debug('Passing through ? extensions: ?', stage, message);\n    if (!this._extensions) return callback.call(context, message);\n\n    var extensions = this._extensions.slice();\n\n    var pipe = function (message) {\n      if (!message) return callback.call(context, message);\n      var extension = extensions.shift();\n      if (!extension) return callback.call(context, message);\n      var fn = extension[stage];\n      if (!fn) return pipe(message);\n      if (fn.length >= 3) extension[stage](message, request, pipe);else extension[stage](message, pipe);\n    };\n\n    pipe(message);\n  }\n};\nextend(Extensible, Logging);\nmodule.exports = Extensible;","map":null,"metadata":{},"sourceType":"script"}